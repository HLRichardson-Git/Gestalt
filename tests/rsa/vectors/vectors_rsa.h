/*
 * Copyright 2023-2024 The Gestalt Project Authors. All Rights Reserved.
 *
 * Licensed under the MIT License. See the file LICENSE for the full text.
 */

/*
 * vectors_rsa.h
 *
 */

#pragma once

#include "rsa/rsa_key_generation/rsaKeyGen.h"

static BigInt p = "0xbf7be0c5d1e70811470fbd96f922989f783d5f12714971c5a3e70e093de76bd1f52618572e83951cdb4f7d30dec892c5aaf8112081455f7047a1fa6599c507b1cbaf6b4be223a60dfe26e80f0b4baf6cc98d04420c18cab902e248a64aa38c9ffba7dd3e1fbae71151283681e5e1058ee5c9ab476a016083f04fe0afe2736527";
static BigInt q = "0xc56538b3e9f3f9939aba958962d632ff86e87d43d7ffdf2073d6db61886e0f6c8abd60807022398b053ecdb7d142416a7922b576f91e4d995b762f37cd6a07affb290b6879ee045b978c9fafa81c8227effdfad787e5f53b46f2d3660d9386a491b5e4b80b5617adfaadb28f95917bac51727d51fda3994392ab95051345010d";
static BigInt d = "0x92efca032ba58fb5da7d93fed4c0430d8fbbe0d4766e4ec57a15a44f75c8450eba870507cecf34e740429321c39cf9eb4c0dec690a2062342a6c3dcd3d17eca2cfed0d639208495e5ee03918bd084f147986ce7d99131a76c9c0f33db6ef76064131bfa8b79b1eb97fb9e00a9a865382bc7e0b0f1c1b1138a692c3d4532778c8bda41a652a50a5677bf46873d1c28c5e5c076eada0cdd16c714664c269d3bc71ff7137c38f27719bc99680af6757b787ee63eaa109d0c9d36581fc977d694b88451e06c681d05c007dd6ab397c79acca0c94fa1ce6170d179557705ce4ba8009713cf9de90ead70ae8fa3010d8b1b95f3abb66e6c8ede5ee4b0881465a3db8e9";

static BigInt n = "0x93a60a41945a4670161ea632e9644630301499e9b9da7501c204da5dcb8122bcbdd3529571b9f38519f0be9ee4419a41140ce453e9ca180014b9e8fb27ef4d2eb5089eec2c0606d10b77b443c58516dfee254fedc11d529e8d4f9df607e8e88bdb4edae1cb18bdc6213e4766557c1dc1ad510a44c9ce7e6943513f6012322fb269f7d47b1b41341d1d172f1b43ea903cd5c2ba102c7f56995e083ce8506482018dc8c9364a0db847934177a6a5cf5be2c2cfe87d246dbb0d10a5586f7db18ae14d6956dcb64f9266e43a50a81243122acb9234aa5d5a76fd2428c6b3a92f1937d0f85c4d9f769fc22a62d9886688572a68a89aabf44cbb0e86535f301bc449fb";
static BigInt e = 65537;

static RSAPrivateKey privateKeyVector = { d, p, q };
static RSAPublicKey publicKeyVector = { n, e };

static std::string pt = "102030405060708090a0b0c0d0e0f";
static std::string ct = "2eab1c8d5315c5094fcc5ed524c312f5bb30bc8516f080f3f10a8d5bb4031e316087d5a0357cd13a0064a5b53df9d9cb39b2ae0835b7c1dac78c06302fdd2a85fa488534ddde50afff6563d9803dacac3716f9005151869717f2aa7da76b5b33acf6185aebe7e2c97cc408cb9a8a7e6293445ed18af827c40fc983397f4564e03d59f0d1e1032d911e551e3bad62b01afa27dd62375d4e8faeea83ebf4a7ac5908c7bc0b95b707753f69de0720d2009c905719035138af5ad14a999226505132e1b6187e5183e01393b3bc14506c6bdcb3475f3e5fe0a250c3979196767ea32bc049e72bb536cf69df9516e412d363ac7c8a4f086d382e96ef7f95a735f2cdfd";

static std::string messageToSign = ct;
static std::string expectedSignature = pt;